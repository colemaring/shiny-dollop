import tkinter as tk

root = tk.Tk()
root.geometry("610x500")  # Set the width to 500 pixels and the height to 300 pixels
root.title("GUI")

preset = tk.StringVar(root)
choices = {'rage', 'legit'}
preset.set('rage')
popupMenu = tk.OptionMenu(root, preset, *choices)
popupMenu.grid(row = 0, column = 0)
inference_windowX = tk.Scale(root, from_=50, to=1000, resolution=25, orient=tk.HORIZONTAL, label='inference window size x', length=300)
inference_windowX.set(300)
inference_windowX.grid(row=1, column=0, sticky='w')
inference_windowY = tk.Scale(root, from_=50, to=1000, resolution=25, orient=tk.HORIZONTAL, label='inference window size Y', length=300)
inference_windowY.set(300)
inference_windowY.grid(row=2, column=0, sticky='w')  
fovX_slider = tk.Scale(root, from_=0, to=100, orient=tk.HORIZONTAL, label='fov X', length=300)
fovX_slider.set(50)
fovX_slider.grid(row=3, column=0, sticky='w')
fovY_slider = tk.Scale(root, from_=0, to=100, orient=tk.HORIZONTAL, label='fov Y', length=300)
fovY_slider.set(30)
fovY_slider.grid(row=4, column=0, sticky='w')
confidence_slider = tk.Scale(root, from_=50, to=100, orient=tk.HORIZONTAL, label='bounding box confidence (aim threshold)', length=300)
confidence_slider.set(70)
confidence_slider.grid(row=5, column=0, sticky='w')
yOffset_slider = tk.Scale(root, from_=0, to=1, resolution=0.01, orient=tk.HORIZONTAL, label='Y aim offset from top of bounding box', length=300)
yOffset_slider.set(.10)
yOffset_slider.grid(row=6, column=0, sticky='w')
sleepTimer_slider = tk.Scale(root, from_=0, to=0.1, resolution=0.0005, orient=tk.HORIZONTAL, label='mouse sleep timer', length=300)
sleepTimer_slider.set(.0005)
sleepTimer_slider.grid(row=7, column=0, sticky='w')
show = tk.BooleanVar()
show_checkbox = tk.Checkbutton(root, text="Show detection window", variable=show, anchor='e')
show_checkbox.grid(row=8, column=0, sticky='w')

speedScaleX_slider = tk.Scale(root, from_=1, to=4, resolution=0.1, orient=tk.HORIZONTAL, label='speed scale X', length=300)
speedScaleX_slider.set(2.1)
speedScaleX_slider.grid(row=0, column=1, sticky='w')
speedScaleY_slider = tk.Scale(root, from_=1, to=4, resolution=0.1, orient=tk.HORIZONTAL, label='speed scale Y', length=300)
speedScaleY_slider.set(4)
speedScaleY_slider.grid(row=1, column=1, sticky='w')
smoothing_slider = tk.Scale(root, from_=1, to=8, orient=tk.HORIZONTAL, label='mouse steps', length=300)
smoothing_slider.set(3)
smoothing_slider.grid(row=2, column=1, sticky='w')
accelX_slider = tk.Scale(root, from_=0, to=1, resolution=0.05, orient=tk.HORIZONTAL, label='acceleration X', length=300)
accelX_slider.set(0.55)
accelX_slider.grid(row=3, column=1, sticky='w')
accelY_slider = tk.Scale(root, from_=0, to=1, resolution=0.05, orient=tk.HORIZONTAL, label='acceleration Y', length=300)
accelY_slider.set(0.2)
accelY_slider.grid(row=4, column=1, sticky='w')
aimHotkeyLabel = tk.Label(root, text="Aim hotkey:")
aimHotkeyLabel.grid(row=5, column=1, sticky='w')
aimHotkey = tk.Entry(root, width=20)
aimHotkey.insert(0, 'c')
aimHotkey.grid(row=5, column=1, sticky='e')
exitHotkeyLabel = tk.Label(root, text="Exit program hotkey:")
exitHotkeyLabel.grid(row=6, column=1, sticky='w')
exitHotkey = tk.Entry(root, width=20)
exitHotkey.insert(0, 'v')
exitHotkey.grid(row=6, column=1, sticky='e')

# on change dropdown value
def change_dropdown(*args):
    if preset.get() == 'rage':
        inference_windowX.set(300)
        inference_windowY.set(300)
        fovX_slider.set(50)
        fovY_slider.set(30)
        confidence_slider.set(70)
        yOffset_slider.set(.10)
        sleepTimer_slider.set(.0005)
        speedScaleX_slider.set(2.1)
        speedScaleY_slider.set(4)
        smoothing_slider.set(3)
        accelX_slider.set(0.55)
        accelY_slider.set(0.2)
    if preset.get() == 'legit':
        inference_windowX.set(100)
        inference_windowY.set(100)
        fovX_slider.set(20)
        fovY_slider.set(10)
        confidence_slider.set(80)
        yOffset_slider.set(.10)
        sleepTimer_slider.set(.005)
        speedScaleX_slider.set(1.8)
        speedScaleY_slider.set(4)
        smoothing_slider.set(5)
        accelX_slider.set(0.40)
        accelY_slider.set(0.2)

# link function to change dropdown
preset.trace_add('write', change_dropdown)